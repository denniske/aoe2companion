language: java

env:
  global:
    - EXPO_SDK_VERSION="38.0.0"
    - TURTLE_VERSION="0.16.2"
    - NODE_VERSION="12.13.1"
    - YARN_VERSION="1.21.1"

# Note: The env var $TRAVIS_BRANCH will contain
# COMMIT: branch name
# TAG:    tag name

jobs:
  include:

#    - stage: placeholder
#      env:
#        - CACHE_NAME=placeholder
#      script:
#        - echo 1


    ####################################
    # PUBLISH
    ####################################

    - stage: publish
      language: node_js
      node_js:
        - 10
      if: branch = master OR tag IS present
      env:
        - CACHE_NAME=functions YARN_CACHE_FOLDER="/home/travis/yarn_cache"
#      cache:
#        directories:
#          - $HOME/yarn_cache
#      before_install:
#        - nvm install $NODE_VERSION
#        - nvm use $NODE_VERSION
#        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
#        - export PATH="$HOME/.yarn/bin:$PATH"
      install:
        - cd server
        - cd functions
        - npm i
        - cd ..
      script:
        - echo "skipping tests"
      deploy:
        provider: firebase
        token:
          secure: 'GWn3ZKpH6D98pR0KKGTW7NoPmIJO+Gulg8tRbACzPPmdTqLVq0tinnBKaZlo20oica+nHy4q+zpfg2/u9K/UrX6K/8O/Ae8QNd8QZo8PsC1D8/LCqzDqzoRwk2Q6e3Cdo/F6K46y/kSMeTFeCDr0EYN00i35UYKpjOFqj4kKvVPAd2zCzANSWSR8GbrNlzDDe6XkncIN5GEMAxhpafsHjnPIw8a0YfiuVCL2FBpJZsu4z/vqeV5uGqjFwaMjF4rebAa33tgCh5I47h8NbqGu/ETl9Edj08w3ZxmLJASo+e+fAmdFEKLfPT2skIhIR73rCI6xmtN3LTifO20xuPok4GS+Njsc4k5tiB1k/lHPWp5jYDaqZLtxK+LuQa/Hug1d4jVPKdRgyzo3qMsvFatlP5mdSqR7eBvX0zezYLE4nP8dwh61mNHUsINulhzh0isT2OA3pXl25QFp+DqStAMFoOf4ra9IXE1g/MD4CUxqYGZJu0fOowpI+womqFD7ycL08hUnw7w1Zt0Rpwkn5BAqgvGyYMz5BMTjIx22QoOCtxGA+7VNucUjiyS9x7rvNQGwAsqrnXybDmFB+jEtrykPqUGlMsSKzVy5GzBBhK+CHYVN22u0hpMAk8RUVjUreaNWQBiI4QaqSp4IZPvgewcZmfHDrCjFDbs6fedmHI0H0zc='
        skip_cleanup: true

#    - stage: publish
#      if: branch = master OR tag IS present
#      env:
#        - CACHE_NAME=publish YARN_CACHE_FOLDER="/home/travis/yarn_cache"
#      cache:
#        directories:
#          - $HOME/yarn_cache
#      before_install:
#        - nvm install $NODE_VERSION
#        - nvm use $NODE_VERSION
#        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
#        - export PATH="$HOME/.yarn/bin:$PATH"
#      script:
#        - yarn
#        - export CHANNEL=$(node deploy/channel-from-tag.js $TRAVIS_BRANCH) && echo $CHANNEL
#        - npx expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD --non-interactive
#        - sudo sysctl fs.inotify.max_user_instances=524288
#        - sudo sysctl fs.inotify.max_user_watches=524288
#        - sudo sysctl fs.inotify.max_queued_events=524288
#        - sysctl -p
#        - npx expo publish --release-channel $CHANNEL


#    ####################################
#    # BUILD iOS
#    ####################################

    - stage: build standalone apps
      if: tag =~ ^v.+$
      os: osx
      osx_image: xcode11.2
      language: node_js
      node_js: "12.13"
      env:
        - CACHE_NAME=build-ios-ipa YARN_CACHE_FOLDER="/Users/travis/yarn_cache"
      cache:
        directories:
          - $HOME/.turtle
          - $HOME/yarn_cache
      before_install:
        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
        - export PATH="$HOME/.yarn/bin:$PATH"
      install:
        - pip install --user awscli
        - export PATH=/Users/travis/Library/Python/2.7/bin:$PATH
        - yarn global add turtle-cli@$TURTLE_VERSION
      script:
        - yarn
        - export CHANNEL=$(node deploy/channel-from-tag.js $TRAVIS_BRANCH) && echo $CHANNEL
        - export ARTIFACT_PATH="/Users/travis/expo-project-$TRAVIS_COMMIT.ipa"
        - turtle setup:ios --sdk-version $EXPO_SDK_VERSION || travis_terminate 1
        - echo $EXPO_IOS_DIST_P12_BASE64 > expo-project_dist.p12.base64
        - base64 --decode expo-project_dist.p12.base64 > expo-project_dist.p12
        - echo $EXPO_IOS_PROVISIONING_PROFILE_BASE64 > expo-project.mobileprovision.base64
        - base64 --decode expo-project.mobileprovision.base64 > expo-project.mobileprovision
        - ls -al
        - turtle build:ios
            --config app.json
            --release-channel $CHANNEL
            --team-id "$EXPO_APPLE_TEAM_ID"
            --dist-p12-path ./expo-project_dist.p12
            --provisioning-profile-path ./expo-project.mobileprovision
            -o $ARTIFACT_PATH
      after_success:
        - aws s3 cp $ARTIFACT_PATH s3://$AWS_BUCKET/`basename $ARTIFACT_PATH`


#    ####################################
#    # BUILD android
#    ####################################

    - stage: build standalone apps
      if: tag =~ ^v.+$
      env:
        - CACHE_NAME=build-android-v4 YARN_CACHE_FOLDER="/home/travis/yarn_cache"
      jdk: openjdk8
      cache:
        directories:
          - $HOME/.turtle
          - $HOME/yarn_cache
          - $HOME/.gradle/wrapper
      before_install:
        - nvm install $NODE_VERSION
        - nvm use $NODE_VERSION
        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
        - export PATH="$HOME/.yarn/bin:$PATH"
      install:
        - pip install --user awscli
        - yarn global add gulp-cli turtle-cli@$TURTLE_VERSION
      script:
        - yarn
        - export CHANNEL=$(node deploy/channel-from-tag.js $TRAVIS_BRANCH) && echo $CHANNEL
        - export ARTIFACT_PATH="/home/travis/expo-project-$TRAVIS_COMMIT.aab"
        - turtle setup:android --sdk-version $EXPO_SDK_VERSION > /dev/null || travis_terminate 1
        - echo $EXPO_ANDROID_KEYSTORE_BASE64 > expo-project.jks.base64
        - base64 --decode expo-project.jks.base64 > expo-project.jks
        - ls -al
        - turtle build:android
            --config app.json
            --release-channel $CHANNEL
            --keystore-path ./expo-project.jks
            --keystore-alias $EXPO_ANDROID_KEYSTORE_ALIAS
            --type app-bundle
            -o $ARTIFACT_PATH
      after_success:
        - aws s3 cp $ARTIFACT_PATH s3://$AWS_BUCKET/`basename $ARTIFACT_PATH`


#    ####################################
#    # Deploy iOS
#    ####################################

    - stage: deploy standalone apps
      os: osx
      osx_image: xcode11.2
      language: node_js
      node_js: "12.13"
      if: tag =~ ^v.+.0.0$
      env:
        - CACHE_NAME=deploy-ios YARN_CACHE_FOLDER="/Users/travis/yarn_cache"
      cache:
        directories:
          - $HOME/.turtle
          - $HOME/yarn_cache
      before_install:
        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
        - export PATH="$HOME/.yarn/bin:$PATH"
      install:
        - pip install --user awscli
        - export PATH=/Users/travis/Library/Python/2.7/bin:$PATH
        - yarn global add turtle-cli@$TURTLE_VERSION
      script:
        - export ARTIFACT_PATH="/Users/travis/expo-project-$TRAVIS_COMMIT.ipa"
        - turtle setup:ios --sdk-version $EXPO_SDK_VERSION || travis_terminate 1
        - aws s3 cp s3://$AWS_BUCKET/`basename $ARTIFACT_PATH` app.ipa
        - ls -al
        - cd ios
        - travis_wait 30 fastlane build_and_deploy_testflight


    #    ####################################
    #    # Deploy android
    #    ####################################

    - stage: deploy standalone apps
      os: osx
      osx_image: xcode11.2
      language: node_js
      node_js: "12.13"
      if: tag =~ ^v.+.0.0$
      env:
        - CACHE_NAME=deploy-android YARN_CACHE_FOLDER="/Users/travis/yarn_cache"
      cache:
        directories:
          - $HOME/yarn_cache
      before_install:
        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
        - export PATH="$HOME/.yarn/bin:$PATH"
      install:
        - pip install --user awscli
        - export PATH=/Users/travis/Library/Python/2.7/bin:$PATH
        - yarn global add expo-cli
      script:
        - export ARTIFACT_PATH="/home/travis/expo-project-$TRAVIS_COMMIT.aab"
        - npx expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD --non-interactive
        - aws s3 cp s3://$AWS_BUCKET/`basename $ARTIFACT_PATH` app.aab
        - echo $FASTLANE_SERVICE_ACCOUNT_BASE64 > play-store-service-account.json.base64
        - base64 --decode play-store-service-account.json.base64 > play-store-service-account.json
        - ls -al
        - npx expo upload:android
            --verbose
            --path app.aab
            --key play-store-service-account.json
            --track production







#    - stage: build
#      if: branch = master OR tag IS present
#      env:
#        - CACHE_NAME=test1-master
#      script:
#        - echo 1
#
#    - stage: testing
#      if: tag =~ ^v.+$
#      env:
#        - CACHE_NAME=test1-every-version
#      script:
#        - echo 1
#
#    - stage: deploy
#      if: tag =~ ^v.+.0.0$
#      env:
#        - CACHE_NAME=test1-major-version
#      script:
#        - echo 1


#    - stage: testing
#      if: tag =~ ^v.+$
#      env:
#        - CACHE_NAME=test1-publish
#      cache:
#        directories:
#          - $HOME/yarn_cache
#      before_install:
#        - nvm install $NODE_VERSION
#        - nvm use $NODE_VERSION
#        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
#        - export PATH="$HOME/.yarn/bin:$PATH"
#      script:
#        - yarn
#        - export CHANNEL=prod-$(node deploy/channel-from-tag.js $TRAVIS_TAG) && echo $CHANNEL
#        - echo $CHANNEL
#        - echo 1-$TRAVIS_BRANCH-
#        - echo 1-$TRAVIS_TAG-

#    - stage: testing
#      env:
#        - CACHE_NAME=test1-deploy-native
#      if: tag =~ ^v.+-native$
##      on:
##        all_branches: true
##        tag: true
##        condition: "$TRAVIS_TAG =~ ^v.*$"
#      script:
#        - echo 1
#        - echo 1-$TRAVIS_BRANCH-
#        - echo 1-$TRAVIS_TAG-

#    - stage: build standalone apps
#      env:
#        - CACHE_NAME=build-android-v3 YARN_CACHE_FOLDER="/home/travis/yarn_cache"
#      jdk: openjdk8
#      cache:
#        directories:
#          - $HOME/.turtle
#          - $HOME/yarn_cache
#          - $HOME/.gradle/wrapper
#      before_install:
#        - nvm install $NODE_VERSION
#        - nvm use $NODE_VERSION
#        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
#        - export PATH="$HOME/.yarn/bin:$PATH"
#      install:
#        - pip install --user awscli
#        - yarn global add gulp-cli turtle-cli@$TURTLE_VERSION
#      script:
#        - yarn
#        - export ARTIFACT_PATH="/home/travis/expo-project-$TRAVIS_COMMIT.apk"
#        - turtle setup:android --sdk-version $EXPO_SDK_VERSION > /dev/null || travis_terminate 1
#        - echo $EXPO_ANDROID_KEYSTORE_BASE64 > expo-project.jks.base64
#        - base64 --decode expo-project.jks.base64 > expo-project.jks
#        - turtle build:android
#            --keystore-path ./expo-project.jks
#            --keystore-alias $EXPO_ANDROID_KEYSTORE_ALIAS
#            --type apk
#            -o $ARTIFACT_PATH
#      after_success:
#        - aws s3 cp $ARTIFACT_PATH s3://$AWS_BUCKET/`basename $ARTIFACT_PATH`

    ####################################
    # BUILD android
    ####################################

#    - stage: build standalone apps
#      os: osx
#      osx_image: xcode9.3
#      language: node_js
#      node_js: "12.13"
#      env:
#        - CACHE_NAME=build-android-osx-v3 YARN_CACHE_FOLDER="/Users/travis/yarn_cache"
#      cache:
#        directories:
#          - $HOME/.turtle
#          - $HOME/yarn_cache
#      before_install:
#        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
#        - export PATH="$HOME/.yarn/bin:$PATH"
#      install:
#        - pip install --user awscli
#        #        - python3 -m pip install --user awscli
#        - export PATH=/Users/travis/Library/Python/2.7/bin:$PATH
#        - yarn global add turtle-cli@$TURTLE_VERSION
#      script:
#        - yarn
#        - export ARTIFACT_PATH="/Users/travis/expo-project-$TRAVIS_COMMIT-2.aab"
#        - turtle setup:android --sdk-version $EXPO_SDK_VERSION || travis_terminate 1
#        - echo $EXPO_ANDROID_KEYSTORE_BASE64 > expo-project.jks.base64
#        - base64 --decode expo-project.jks.base64 > expo-project.jks
#        - turtle build:android
#          --keystore-path ./expo-project.jks
#          --keystore-alias $EXPO_ANDROID_KEYSTORE_ALIAS
#          --type app-bundle
#          -o $ARTIFACT_PATH
#      after_success:
#        - aws s3 cp $ARTIFACT_PATH s3://$AWS_BUCKET/`basename $ARTIFACT_PATH`


#    - stage: build standalone apps
#      os: osx
#      osx_image: xcode9.3
#      language: node_js
#      node_js: "12.13"
#      env:
#        - CACHE_NAME=build-android-osx-v3fastlane YARN_CACHE_FOLDER="/Users/travis/yarn_cache"
#      cache:
#        directories:
#          - $HOME/.turtle
#          - $HOME/yarn_cache
#      before_install:
#        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
#        - export PATH="$HOME/.yarn/bin:$PATH"
#      install:
#        - pip install --user awscli
#        #        - python3 -m pip install --user awscli
#        - export PATH=/Users/travis/Library/Python/2.7/bin:$PATH
#        - yarn global add turtle-cli@$TURTLE_VERSION
#      script:
#        - yarn
#        - export ARTIFACT_PATH="/Users/travis/expo-project-$TRAVIS_COMMIT-2.aab"
#        - turtle setup:android --sdk-version $EXPO_SDK_VERSION || travis_terminate 1
#        - fastlane


    ####################################
    # BUILD iOS
    ####################################

    #    - stage: build standalone apps
    #      os: osx
    #      osx_image: xcode11.2
    #      language: node_js
    #      node_js: "12.13"
    #      env:
    #        - CACHE_NAME=build-ios-simulator YARN_CACHE_FOLDER="/Users/travis/yarn_cache"
    #      cache:
    #        directories:
    #          - $HOME/.turtle
    #          - $HOME/yarn_cache
    #      before_install:
    #        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
    #        - export PATH="$HOME/.yarn/bin:$PATH"
    #      install:
    #        - pip install --user awscli
    ##        - python3 -m pip install --user awscli
    #        - export PATH=/Users/travis/Library/Python/2.7/bin:$PATH
    #        - yarn global add turtle-cli@$TURTLE_VERSION
    #      script:
    #        - yarn
    #        - export ARTIFACT_PATH="/Users/travis/expo-project-$TRAVIS_COMMIT.tar.gz"
    #        - turtle setup:ios --sdk-version $EXPO_SDK_VERSION || travis_terminate 1
    #        - turtle build:ios
    #            --team-id $EXPO_APPLE_TEAM_ID
    #            --type simulator
    #            -o $ARTIFACT_PATH
    #      after_success:
    #        - aws s3 cp $ARTIFACT_PATH s3://$AWS_BUCKET/`basename $ARTIFACT_PATH`


    ####################################
    # DEPLOY
    ####################################

#    - stage: deploy standalone apps
#      os: osx
#      osx_image: xcode11.2
#      language: node_js
#      node_js: "12.13"
#      env:
#        - CACHE_NAME=deploy-android YARN_CACHE_FOLDER="/Users/travis/yarn_cache"
#      cache:
#        directories:
#          - $HOME/.turtle
#          - $HOME/yarn_cache
#      before_install:
#        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
#        - export PATH="$HOME/.yarn/bin:$PATH"
#      install:
#        - pip install --user awscli
#        - export PATH=/Users/travis/Library/Python/2.7/bin:$PATH
#        - yarn global add turtle-cli@$TURTLE_VERSION
#      script:
##        - yarn
#        - export ARTIFACT_PATH="/Users/travis/expo-project-$TRAVIS_COMMIT.aab"
#        - turtle setup:ios --sdk-version $EXPO_SDK_VERSION || travis_terminate 1
#        - echo $FASTLANE_SERVICE_ACCOUNT_BASE64 > play-store-service-account.json.base64
#        - base64 --decode play-store-service-account.json.base64 > play-store-service-account.json
#        - aws s3 cp s3://$AWS_BUCKET/`basename $ARTIFACT_PATH` expo-project-cfa0.aab
#        - ls -al
#        - cd android
#        - fastlane deploy_play_store
#
#
#    - stage: deploy standalone apps
#      os: osx
#      osx_image: xcode11.2
#      language: node_js
#      node_js: "12.13"
##      if: tag =~ ^v.+.0.0$
#      env:
#        - CACHE_NAME=deploy-ios YARN_CACHE_FOLDER="/Users/travis/yarn_cache"
#      cache:
#        directories:
#          - $HOME/yarn_cache
#      before_install:
#        - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version $YARN_VERSION
#        - export PATH="$HOME/.yarn/bin:$PATH"
#      install:
#        - pip install --user awscli
#        - export PATH=/Users/travis/Library/Python/2.7/bin:$PATH
#        - yarn global add expo-cli
#      script:
#        - export ARTIFACT_PATH="/home/travis/expo-project-d48ea335d22aa9a651e5bf5d264f47fcd57d01b3.ipa"
#        - npx expo login -u $EXPO_USERNAME -p $EXPO_PASSWORD --non-interactive
#        - aws s3 cp s3://$AWS_BUCKET/`basename $ARTIFACT_PATH` app.ipa
#        - ls -al
#        - npx expo upload:ios
#            --non-interactive
#            --path app.ipa
#            --apple-id $EXPO_APPLE_ID
#            --apple-id-password $EXPO_APPLE_ID_PASSWORD
#            --itc-team-id $EXPO_APPLE_TEAM_ID
